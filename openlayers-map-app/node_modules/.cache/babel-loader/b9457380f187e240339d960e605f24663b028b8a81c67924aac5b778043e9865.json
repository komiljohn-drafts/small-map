{"ast":null,"code":"var _jsxFileName = \"/Users/komiljohn/TestTasks/osm-prosight-dev/openlayers-map-app/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"ol/ol.css\";\nimport { Map, View } from \"ol\";\nimport { Tile as TileLayer } from \"ol/layer\";\nimport { OSM } from \"ol/source\";\nimport { fromLonLat } from \"ol/proj\";\nimport { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\nimport { Vector as VectorSource } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Style, Icon, Fill, Stroke, Circle as CircleStyle } from \"ol/style\";\nimport ZoomControl from \"ol/control/Zoom\";\n\n// Sample data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pointsData = [{\n  id: 1,\n  name: \"Point A\",\n  status: \"open\",\n  coordinates: [30.5, 50.5],\n  comment: \"Initial Comment A\"\n}, {\n  id: 2,\n  name: \"Point B\",\n  status: \"closed\",\n  coordinates: [30.6, 50.6],\n  comment: \"Initial Comment B\"\n}];\nconst getColorForStatus = status => {\n  return status === \"open\" ? \"green\" : \"red\";\n};\nconst MapComponent = () => {\n  _s();\n  var _localStorage$setItem;\n  const mapRef = useRef();\n  const [points, setPoints] = useState((_localStorage$setItem = localStorage.setItem(\"points\", JSON.stringify(pointsData))) !== null && _localStorage$setItem !== void 0 ? _localStorage$setItem : pointsData); // Store data in localStorage\n\n  useEffect(() => {\n    const map = new Map({\n      target: mapRef.current,\n      layers: [new TileLayer({\n        source: new OSM()\n      })],\n      controls: [new ZoomControl()],\n      view: new View({\n        center: fromLonLat([30.5, 50.5]),\n        // Default center\n        zoom: 6\n      })\n    });\n    const vectorSource = new VectorSource();\n    points.forEach(point => {\n      const feature = new Feature({\n        geometry: new Point(fromLonLat(point.coordinates))\n      });\n      feature.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 6,\n          fill: new Fill({\n            color: getColorForStatus(point.status)\n          }),\n          stroke: new Stroke({\n            color: \"#fff\",\n            width: 1\n          })\n        })\n      }));\n      feature.setId(point.id);\n      vectorSource.addFeature(feature);\n    });\n    const vectorLayer = new VectorLayer({\n      source: vectorSource\n    });\n    map.addLayer(vectorLayer);\n\n    // Fit the map to show all points\n    map.getView().fit(vectorSource.getExtent(), {\n      padding: [50, 50, 50, 50],\n      maxZoom: 14\n    });\n\n    // Point click interaction\n    map.on(\"singleclick\", function (event) {\n      map.forEachFeatureAtPixel(event.pixel, function (feature) {\n        const pointId = feature.getId();\n        const clickedPoint = points.find(point => point.id === pointId);\n        const newComment = prompt(\"Update Comment:\", clickedPoint.comment);\n        if (newComment !== null) {\n          const updatedPoints = points.map(point => point.id === pointId ? {\n            ...point,\n            comment: newComment\n          } : point);\n          setPoints(updatedPoints);\n        }\n      });\n    });\n  }, [points, setPoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map\",\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"JllOF8E+Yu9qecRWbXtEBr2w6Mo=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","View","Tile","TileLayer","OSM","fromLonLat","Feature","Point","Vector","VectorSource","VectorLayer","Style","Icon","Fill","Stroke","Circle","CircleStyle","ZoomControl","jsxDEV","_jsxDEV","pointsData","id","name","status","coordinates","comment","getColorForStatus","MapComponent","_s","_localStorage$setItem","mapRef","points","setPoints","localStorage","setItem","JSON","stringify","map","target","current","layers","source","controls","view","center","zoom","vectorSource","forEach","point","feature","geometry","setStyle","image","radius","fill","color","stroke","width","setId","addFeature","vectorLayer","addLayer","getView","fit","getExtent","padding","maxZoom","on","event","forEachFeatureAtPixel","pixel","pointId","getId","clickedPoint","find","newComment","prompt","updatedPoints","ref","className","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/komiljohn/TestTasks/osm-prosight-dev/openlayers-map-app/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"ol/ol.css\";\nimport { Map, View } from \"ol\";\nimport { Tile as TileLayer } from \"ol/layer\";\nimport { OSM } from \"ol/source\";\nimport { fromLonLat } from \"ol/proj\";\nimport { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\nimport { Vector as VectorSource } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Style, Icon, Fill, Stroke, Circle as CircleStyle } from \"ol/style\";\nimport ZoomControl from \"ol/control/Zoom\";\n\n// Sample data\nconst pointsData = [\n  {\n    id: 1,\n    name: \"Point A\",\n    status: \"open\",\n    coordinates: [30.5, 50.5],\n    comment: \"Initial Comment A\",\n  },\n  {\n    id: 2,\n    name: \"Point B\",\n    status: \"closed\",\n    coordinates: [30.6, 50.6],\n    comment: \"Initial Comment B\",\n  },\n];\n\nconst getColorForStatus = (status) => {\n  return status === \"open\" ? \"green\" : \"red\";\n};\n\nconst MapComponent = () => {\n  const mapRef = useRef();\n  const [points, setPoints] = useState(localStorage.setItem(\"points\", JSON.stringify(pointsData)) ?? pointsData); // Store data in localStorage\n\n  useEffect(() => {\n    const map = new Map({\n      target: mapRef.current,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n      ],\n      controls: [new ZoomControl()],\n      view: new View({\n        center: fromLonLat([30.5, 50.5]), // Default center\n        zoom: 6,\n      }),\n    });\n\n    const vectorSource = new VectorSource();\n    points.forEach((point) => {\n      const feature = new Feature({\n        geometry: new Point(fromLonLat(point.coordinates)),\n      });\n      feature.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 6,\n            fill: new Fill({ color: getColorForStatus(point.status) }),\n            stroke: new Stroke({ color: \"#fff\", width: 1 }),\n          }),\n        })\n      );\n      feature.setId(point.id);\n      vectorSource.addFeature(feature);\n    });\n\n    const vectorLayer = new VectorLayer({\n      source: vectorSource,\n    });\n\n    map.addLayer(vectorLayer);\n\n    // Fit the map to show all points\n    map.getView().fit(vectorSource.getExtent(), {\n      padding: [50, 50, 50, 50],\n      maxZoom: 14,\n    });\n\n    // Point click interaction\n    map.on(\"singleclick\", function (event) {\n      map.forEachFeatureAtPixel(event.pixel, function (feature) {\n        const pointId = feature.getId();\n        const clickedPoint = points.find((point) => point.id === pointId);\n        const newComment = prompt(\"Update Comment:\", clickedPoint.comment);\n        if (newComment !== null) {\n          const updatedPoints = points.map((point) =>\n            point.id === pointId ? { ...point, comment: newComment } : point\n          );\n          setPoints(updatedPoints);\n        }\n      });\n    });\n  }, [points, setPoints]);\n\n  return <div ref={mapRef} className=\"map\" style={{ height: \"100vh\", width: \"100%\" }}></div>;\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}